{"version":3,"sources":["components/SurveyList/SurveyList.js","components/NewSurvey/NewSurvey.js","common/Header.js","App.js","index.js"],"names":["SurveyList","props","useState","surveyId","setsurveyId","history","useHistory","id","className","Surveys","map","survey","index","onClick","type","name","value","checked","onChange","text","dropdownVal","ddl","label","length","push","disabled","deleteSurveyHandler","NewSurvey","enteredText","setEnteredText","foundEdit","setFoundEdit","selected","setSelected","match","params","useEffect","found","findUserHandler","onSubmit","event","preventDefault","onEditsurvey","Math","random","toString","onAddsurvey","target","options","MultiSelectValues","labelledBy","Header","App","courseSurveys","setCourseSurveys","isLoading","setIsLoading","testSurvey","console","log","saveSurvey","prevCourseSurveys","concat","find","element","editSurvey","surveyToBeEdited","updatedSurveys","coursesurvey","deleteSurvey","surveyToBeDeleted","remainingSurveys","filter","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"gPA2FeA,EAxFI,SAACC,GAClB,MAA6BC,mBAAS,MAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUC,cAkBhB,OACE,yBAASC,GAAG,QAAZ,SACA,qBAAKC,UAAU,YAAf,SACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,gDAGR,uBAEA,gCACA,wBAAOA,UAAU,sBAAjB,UACC,uBAAOA,UAAU,aAAjB,SACK,+BACE,sCACA,sDACA,qDAGJ,gCAEEP,EAAMQ,QAAQC,KAAI,SAACC,EAAOC,GACtC,OAAO,qBAAoBC,QAAS,kBA5BTN,EA4B+BI,EAAOJ,QA3B7DH,EAAYG,GADU,IAACA,GA4BpB,UACD,oBAAIC,UAAU,OAAd,SACA,qBAAKA,UAAU,yBAAf,SACJ,uBAAOA,UAAU,mBAAjB,SACE,uBAAOM,KAAK,QACZN,UAAU,wBACJO,KAAK,YACLC,MAAOL,EAAOJ,GACdU,QAASd,IAAaQ,EAAOJ,GAC7BW,SAAU,qBAKd,6BAAKP,EAAOQ,OACZ,6BAAKR,EAAOS,aAAaT,EAAOS,YAAYV,KAAI,SAACW,EAAIT,GAEnD,OAAO,iCAA6BS,EAAIC,MAAjC,IAAyCV,IAAWD,EAAOS,YAAYG,OAAO,EAAK,IAAM,KAA9EF,EAAIC,MAAMV,UAjBpBD,EAAOJ,YA0BnB,gCACE,yBAAQM,QAlEQ,WAClBR,EAAQmB,KAAK,kBAiEqBhB,UAAU,4BAA1C,cAAuE,mBAAGA,UAAU,gBAApF,cACA,yBAAQK,QA/DM,WAChBR,EAAQmB,KAAR,sBAA4BrB,KA8DIK,UAAU,4BAA4BiB,UAAWtB,EAA/E,UAAoG,mBAAGK,UAAU,sBAAjH,WACA,yBAAQK,QA5DM,WAClBZ,EAAMyB,oBAAoBvB,IA2DUK,UAAU,2BAA2BiB,UAAWtB,EAAhF,UAAqG,mBAAGK,UAAU,iBAAlH,mBAGA,mC,QC0BSmB,EArGG,SAAA1B,GAChB,IAAMI,EAAUC,cAChB,EAAsCJ,mBAAS,IAA/C,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA+B3B,mBAAS,IAAxC,mBAAO4B,EAAP,KAAiBC,EAAjB,KAMA,EAAgC7B,mBAAS,IAAzC,mBAAO8B,EAAP,KAAiBC,EAAjB,KAGM9B,EAAWF,EAAMiC,MAAMC,OAAOhC,SACpCiC,qBAAU,WACR,GAAGjC,EAAS,CACV,IAAMkC,EAAMpC,EAAMqC,gBAAgBnC,GAE/BkC,IACDN,EAAaM,GACbR,EAAeQ,EAAMlB,MACrBc,EAAYI,EAAMjB,iBAGtB,CAACjB,EAASF,IA2BZ,OACE,yBAASM,GAAG,UAAZ,SACH,qBAAKC,UAAU,YAAf,SACK,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACF,sBAAKA,UAAU,OAAf,UACM,qBAAKA,UAAU,cAAf,SACA,6BAAKL,EAAS,cAAc,iBAE5B,qBAAKK,UAAU,YAAf,SAGN,uBAAMA,UAAU,aAAa+B,SArCP,SAAAC,GAExB,GADAA,EAAMC,iBACHtC,EAEDF,EAAMyC,aAAa,CACjBnC,GAAIuB,EAAUvB,GACdY,KAAMS,EACNR,YAAYY,QAEX,CAEH,IAAML,EAAY,CAChBpB,GAAIoC,KAAKC,SAASC,WAClB1B,KAAMS,EACNR,YAAYY,GAEdH,EAAe,IACjB5B,EAAM6C,YAAYnB,GAElBtB,EAAQmB,KAAK,MAkBX,UACA,sBAAKhB,UAAU,aAAf,UACI,kDACI,uBAAOA,UAAU,eAAeM,KAAK,OAAOE,MAAOY,EAAaV,SAnBlD,SAAAsB,GACxBX,EAAeW,EAAMO,OAAO/B,aAqBxB,sBAAKR,UAAU,aAAf,UACA,oDACA,cAAC,IAAD,CACAwC,QAAS/C,EAAMgD,kBACfjC,MAAOgB,EACPd,SAAUe,EACViB,WAAW,cAIb,qBAAK1C,UAAU,YAAf,SACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,yBAAQA,UAAU,0BAA0BK,QAAS,kBAAIR,EAAQmB,KAAK,MAAtE,cAA6E,mBAAGhB,UAAU,sBAA1F,eAEF,qBAAKA,UAAU,WAAf,SACA,wBAAQA,UAAU,4BAA4BM,KAAK,SAASW,UAAYG,GAAaI,EAAST,OAAO,GAAsB,IAAlBS,EAAST,OAAlH,0CCvEO4B,EAfA,WACX,OACI,wBAAQ5C,GAAG,cAAcC,UAAU,6BAAnC,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,WAAf,SACE,+BACE,mBAAGA,UAAU,eADf,uBCyFD4C,G,YA1FH,WACV,MAA0ClD,mBAAS,IAAnD,mBAAOmD,EAAP,KAAsBC,EAAtB,KACA,EAA+BpD,oBAAS,GAAxC,mBAAOqD,EAAP,KAAiBC,EAAjB,KACMP,EAAoB,CACxB,CAAG1C,GAAG,QAAQe,MAAO,qBAAqBN,MAAM,OAChD,CAAIT,GAAG,QAAQe,MAAO,oBAAoBN,MAAM,MAChD,CAAIT,GAAG,QAAQe,MAAO,WAAWN,MAAM,OAEzCoB,qBAAU,WACRoB,GAAa,GAEb,IAAMC,EAAW,CACf,CAAElD,GAAI,MAAOY,KAAM,oBACnBC,YAAY,CACV,CAAGE,MAAO,qBAAqBN,MAAM,OACrC,CAAGM,MAAO,oBAAoBN,MAAM,QAEtC,CAAET,GAAI,MAAOY,KAAM,0BACnBC,YAAY,CACV,CAAGE,MAAO,oBAAoBN,MAAM,QAEtC,CAAET,GAAI,MAAOY,KAAM,yBACnBC,YAAY,CAAC,CAAGE,MAAO,WAAWN,MAAM,SAG1C0C,QAAQC,IAAI,aAAaF,GACzBH,EAAiBG,KACjB,CAACJ,IAEH,IAAMO,EAAa,SAACjC,GAElB2B,GAAiB,SAACO,GAAD,OAAuBA,EAAkBC,OAAOnC,OAG7DW,EAAgB,SAACnC,GAErB,OADckD,EAAcU,MAAK,SAAAC,GAAO,OAAIA,EAAQzD,KAAOJ,MAIvD8D,EAAW,SAACC,GAChB,IAAMC,EAAed,EAAc3C,KAAI,SAAC0D,GACtC,OAAIA,EAAa7D,KAAO2D,EAAiB3D,GAChC,2BAAK2D,GAAZ,IAA8B/C,KAAM+C,EAAiB/C,KAAKC,YAAY8C,EAAiB9C,cAEhFgD,KAGXd,EAAiBa,IAGbE,EAAa,SAACC,GAClB,IAAMC,EAAmBlB,EAAcmB,QAAO,SAACJ,GAC7C,OAAOA,EAAa7D,KAAO+D,KAE7BhB,EAAiBiB,IAGnB,OACE,qCACChB,GAAW,yCACVA,GAAW,sBAAK/C,UAAU,iBAAf,UACb,cAAC,EAAD,IACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEA,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAClBC,OAAQ,SAAC1E,GAAD,OAAS,cAAC,EAAD,aACjBQ,QAAS4C,EACT3B,oBAAqB2C,GACjBpE,OAEF,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,gBAClBC,OAAQ,SAAC1E,GAAD,OAAS,cAAC,EAAD,aACjB6C,YAAac,EACbX,kBAAmBA,GACfhD,OAEJ,cAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,wBAClBC,OAAQ,SAAC1E,GAAD,OAAS,cAAC,EAAD,aACjByC,aAAcuB,EACd3B,gBAAiBA,EACjBW,kBAAmBA,GACfhD,oBCrFd2E,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.39cade5e.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SurveyList = (props) => {\r\n  const [surveyId,setsurveyId]=useState(null);\r\n  const history = useHistory();\r\n\r\n  // Add New Survey\r\n  const addNewHandler=()=>{\r\n    history.push('/addNewSurvey');\r\n  }\r\n  // Edit Survey\r\n  const editHandler=()=>{\r\n    history.push(`/editSurvey/${surveyId}`);\r\n  }\r\n// //  Delete Survey\r\nconst deleteHandler=()=>{\r\n  props.deleteSurveyHandler(surveyId);\r\n}\r\n  const handleRadioButton=(id)=>{    \r\n    setsurveyId(id);\r\n  }\r\n  // JSX--SurveyList\r\n  return (\r\n    <section id=\"posts\">\r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4>Latest Posts</h4>\r\n            </div>\r\n          \r\n      <br/>\r\n      {/* table */}\r\n      <div>\r\n      <table className='table table-striped'>\r\n       <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th>&nbsp;</th>\r\n              <th>Survey Template Name</th>\r\n              <th>Applicable For</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n            props.Surveys.map((survey,index) => {       \r\nreturn <tr key={survey.id} onClick={()=>handleRadioButton(survey.id)} >     \r\n      <td className=\"pr-0\">\r\n      <div className=\"form-check-inline mr-0\">\r\n  <label className=\"form-check-label\">\r\n    <input type=\"radio\" \r\n    className=\"form-check-input mr-0\"\r\n          name=\"site_name\" \r\n          value={survey.id}\r\n          checked={surveyId === survey.id} \r\n          onChange={()=>{}}\r\n          />\r\n  </label>\r\n</div>\r\n        </td>                            \r\n      <td>{survey.text}</td>\r\n      <td>{survey.dropdownVal&&survey.dropdownVal.map((ddl,index)=>\r\n      {     \r\n        return <span key={ddl.label+index}>{ddl.label} {index !== (survey.dropdownVal.length-1) ? ',' : ''}</span>\r\n      }      \r\n      )}</td>     \r\n              </tr>\r\n            })\r\n            }\r\n          </tbody>      \r\n    </table>\r\n    {/* Buttons */}\r\n    <div>\r\n      <button onClick={addNewHandler} className=\"btn btn-primary btn-block\"> <i className=\"fas fa-plus\"></i> Add New</button>\r\n      <button onClick={editHandler} className=\"btn btn-warning btn-block\" disabled={!surveyId?true:false}><i className=\"fas fa-pencil-alt\"></i> Edit</button>\r\n      <button onClick={deleteHandler} className=\"btn btn-danger btn-block\" disabled={!surveyId?true:false}><i className=\"fas fa-trash\"></i> Delete</button>\r\n    </div>\r\n      </div>\r\n      <br />    \r\n      </div>\r\n      {/* card ends*/} \r\n    </div>\r\n    {/* col-md-9 ends*/}     \r\n    </div>  \r\n    {/* row ends*/}     \r\n      </div> \r\n      {/* container ends*/}     \r\n    </section>\r\n  );\r\n};\r\nexport default SurveyList;","import React, { useState,useEffect } from 'react';\r\nimport { useHistory } from \"react-router\";\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\n\r\nconst NewSurvey = props => {\r\n  const history = useHistory();\r\n  const [enteredText, setEnteredText] = useState('');\r\n  const [foundEdit,setFoundEdit]=useState('');\r\n  // const MultiSelectValues = [\r\n  //     {  id:\"ddl_1\",label: \"self-paced modules\",value:\"spm\" },\r\n  //     {   id:\"ddl_2\",label: \"classroom modules\",value:\"cm\" },\r\n  //     {   id:\"ddl_3\",label: \"journeys\",value:\"js\" },    \r\n  //   ];\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  //get existing data based on survey id from url\r\n  const surveyId = props.match.params.surveyId;\r\n  useEffect(()=>{\r\n    if(surveyId){\r\n      const found=props.findUserHandler(surveyId);      \r\n      //if existing data populate textboxes with data\r\n      if(found){\r\n        setFoundEdit(found);\r\n        setEnteredText(found.text);\r\n        setSelected(found.dropdownVal)\r\n      }\r\n    }\r\n  },[surveyId,props]);  \r\n  // Form Submit Event\r\n  const SurveyFormHandler = event => {\r\n    event.preventDefault();\r\n    if(surveyId){\r\n      // Edit Survey\r\n      props.onEditsurvey({\r\n        id: foundEdit.id,\r\n        text: enteredText,\r\n        dropdownVal:selected\r\n      });\r\n    }else{\r\n      // Add Survey\r\n      const NewSurvey = {\r\n        id: Math.random().toString(),\r\n        text: enteredText,\r\n        dropdownVal:selected\r\n      };\r\n      setEnteredText('');\r\n    props.onAddsurvey(NewSurvey);\r\n    }      \r\n    history.push('/');\r\n  };\r\n  const textChangeHandler = event => {\r\n    setEnteredText(event.target.value);\r\n  }; \r\n  // JSX--NewSurvey\r\n  return (\r\n    <section id=\"details\">\r\n <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n      <div className=\"card\">\r\n            <div className=\"card-header\">\r\n            <h1>{surveyId?\"Edit Survey\":\"Add Survey\"}</h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n          \r\n      <form className=\"new-survey\" onSubmit={SurveyFormHandler}>\r\n      <div className=\"form-group\">                 \r\n          <label>Template Name</label>                 \r\n              <input className=\"form-control\" type=\"text\" value={enteredText} onChange={textChangeHandler} />     \r\n           </div>     \r\n        {/* Multiselect */}\r\n        <div className=\"form-group\">    \r\n        <label>Applicable For:</label>          \r\n        <MultiSelect\r\n        options={props.MultiSelectValues}\r\n        value={selected}\r\n        onChange={setSelected}\r\n        labelledBy=\"Select\"\r\n      />       \r\n        </div>       \r\n      {/* Form Buttons */}\r\n      <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">         \r\n          <button className=\"btn btn-light btn-block\" onClick={()=>history.push('/')}> <i className=\"fas fa-arrow-left\"></i> Cancel</button>    \r\n        </div>\r\n        <div className=\"col-md-3\">        \r\n        <button className=\"btn btn-success btn-block\" type=\"submit\" disabled={(!enteredText&&selected.length>0)||selected.length===0}>Save</button>      \r\n        </div>      \r\n      </div>\r\n    </div>     \r\n    </form>   \r\n    </div>  \r\n    </div>\r\n    </div>\r\n    {/* col ends */}\r\n        </div>\r\n        {/* row ends */}\r\n        </div>\r\n        {/* container ends */}\r\n    </section>\r\n\r\n  );\r\n};\r\nexport default NewSurvey;\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header id=\"main-header\" className=\"py-2 bg-primary text-white\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <h1>\r\n                  <i className=\"fas fa-cog\"></i> Surveys</h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState,useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SurveyList from \"./components/SurveyList/SurveyList\";\nimport NewSurvey from \"./components/NewSurvey/NewSurvey\";\nimport Header from './common/Header';\nimport \"./App.css\";\nimport Axios from \"axios\";\nconst App = () => {\n  const [courseSurveys, setCourseSurveys] = useState([])\n  const [isLoading,setIsLoading]=useState(true);\n  const MultiSelectValues = [\n    {  id:\"ddl_1\",label: \"self-paced modules\",value:\"spm\" },\n    {   id:\"ddl_2\",label: \"classroom modules\",value:\"cm\" },\n    {   id:\"ddl_3\",label: \"journeys\",value:\"js\" },    \n  ];\n  useEffect(()=>{    \n    setIsLoading(false);\n    // console.log(\"error\",error);\n    const testSurvey=[\n      { id: \"cg1\", text: \"Training Feedback\",\n      dropdownVal:[\n        {  label: \"self-paced modules\",value:\"spm\"  },\n        {  label: \"classroom modules\",value:\"cm\"  },\n      ]},\n      { id: \"cg2\", text: \"External COntent Rating\",\n      dropdownVal:[\n        {  label: \"classroom modules\",value:\"cm\"  },\n      ] },\n      { id: \"cg3\", text: \"HTrainer Effectiveness\",\n      dropdownVal:[{  label: \"journeys\",value:\"js\"  },],\n    },\n    ];\n    console.log(\"testSurvey\",testSurvey);\n    setCourseSurveys(testSurvey);\n  },[courseSurveys])\n\n  const saveSurvey = (NewSurvey) => {\n    // setCourseSurveys(courseSurveys.concat(NewSurvey));\n    setCourseSurveys((prevCourseSurveys) => prevCourseSurveys.concat(NewSurvey));\n  };\n  //return existing survey by id\n  const findUserHandler=(surveyId)=>{\n    const found = courseSurveys.find(element => element.id === surveyId);\n    return found;\n  }\n  //Edit Survey\n  const editSurvey=(surveyToBeEdited)=>{\n    const updatedSurveys=courseSurveys.map((coursesurvey)=>{\n      if (coursesurvey.id === surveyToBeEdited.id) {\n        return { ...surveyToBeEdited, text: surveyToBeEdited.text,dropdownVal:surveyToBeEdited.dropdownVal };\n      } else {\n        return coursesurvey;\n      }\n    })\n    setCourseSurveys(updatedSurveys)\n  }\n  //delete Survey\n  const deleteSurvey=(surveyToBeDeleted)=>{\n    const remainingSurveys = courseSurveys.filter((coursesurvey) => {\n      return coursesurvey.id !== surveyToBeDeleted;\n    });\n    setCourseSurveys(remainingSurveys);\n  }\n\n  return (\n    <>\n    {isLoading&&<p>Loading</p>}\n    {!isLoading&&<div className='course-surveys'>      \n    <Header/>\n      <Router>\n        <Switch>\n          {/* home page */}\n        <Route exact path=\"/\" \n        render={(props)=><SurveyList \n        Surveys={courseSurveys}   \n        deleteSurveyHandler={deleteSurvey}      \n        {...props}/>}/>  \n        {/* add new survey*/}\n          <Route exact path=\"/addNewSurvey\" \n          render={(props)=><NewSurvey \n          onAddsurvey={saveSurvey} \n          MultiSelectValues={MultiSelectValues}\n          {...props}/>}/>      \n          {/* edit survey*/}\n          <Route exact path=\"/editSurvey/:surveyId\" \n          render={(props)=><NewSurvey \n          onEditsurvey={editSurvey} \n          findUserHandler={findUserHandler} \n          MultiSelectValues={MultiSelectValues}\n          {...props}/>}/>\n        </Switch>\n      </Router>\n    </div>\n    }\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}